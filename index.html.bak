<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Catch the MUT8 Virus</title>
<style>
  body {
    margin: 0;
    background: url('Images/mut8-background.jpg') no-repeat center center fixed;
    background-size: contain;
    background-color: black;
    overflow: hidden;
    font-family: 'Arial', sans-serif;
    color: #fff;
    text-align: center;
    user-select: none;
  }

  h1 {
    margin-top: 30px;
    font-size: 2em;
  }

  #subheading {
    font-size: 1.2em;
    color: #ffaaaa;
    margin-bottom: 30px;
  }

  #startScreen {
    margin-top: 40px;
  }

  #gameContainer {
    position: relative;
    width: 100vw;
    height: 80vh;
    overflow: hidden;
    margin: 0 auto;
    touch-action: manipulation;
    display: none;
  }

  .virus {
    position: absolute;
    width: 10vw;
    height: 10vw;
    max-width: 90px;
    max-height: 90px;
    background-image: url('Images/Zombie.png');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
    user-select: none;
  }

  #scoreboard {
    font-size: 1.5em;
    margin: 10px 0 20px 0;
    display: none;
  }

  #walletInput, #startButton {
    font-size: 1.2em;
    padding: 8px 12px;
    border-radius: 5px;
    border: none;
    margin: 5px;
    max-width: 300px;
    width: 300px;
  }

  #leaderboard {
    max-width: 400px;
    margin: 20px auto;
    background: rgba(0,0,0,0.6);
    padding: 15px;
    border-radius: 8px;
    font-size: 1em;
    overflow-y: auto;
    max-height: 220px;
    display: none;
  }

  #leaderboard h2 {
    margin-top: 0;
  }

  @media (max-width: 768px) {
    #startButton {
      font-size: 2.8em !important;
      padding: 24px 0 !important;
      max-width: 100% !important;
      width: 90vw !important;
      border-radius: 12px !important;
      margin: 20px auto !important;
      display: block !important;
    }
    #walletInput {
      font-size: 1.8em !important;
      max-width: 90vw !important;
      width: 90vw !important;
      padding: 12px !important;
      margin: 10px auto !important;
      display: block !important;
    }
  }
</style>
</head>
<body>

<h1>Catch the MUT8 Virus</h1>
<p id="subheading">Play to receive free airdrop of 100 tokens. There is no cure.</p>

<div id="startScreen">
  <input type="text" id="walletInput" placeholder="Enter wallet address" maxlength="50" />
  <button id="startButton">Start Game</button>
</div>

<div id="scoreboard">Score: 0</div>
<div id="gameContainer"></div>

<div id="leaderboard">
  <h2>Leaderboard</h2>
  <ol id="leaderboardList"></ol>
</div>

<script>
  const gameContainer = document.getElementById('gameContainer');
  const scoreboard = document.getElementById('scoreboard');
  const startButton = document.getElementById('startButton');
  const walletInput = document.getElementById('walletInput');
  const leaderboardList = document.getElementById('leaderboardList');
  const startScreen = document.getElementById('startScreen');
  const leaderboard = document.getElementById('leaderboard');

  let score = 0;
  let viruses = [];
  let spawnInterval;
  let gameActive = false;

  function randomX() {
    return Math.random() * (gameContainer.clientWidth - 90);
  }

  function createVirus() {
    if (!gameActive) return;
    const virus = document.createElement('div');
    virus.classList.add('virus');
    virus.style.left = randomX() + 'px';
    virus.style.bottom = '-90px';
    gameContainer.appendChild(virus);

    const speed = Math.max(3000 - score * 20, 800);

    virus.animate(
      [{ transform: 'translateY(0)' }, { transform: `translateY(-${gameContainer.clientHeight + 100}px)` }],
      { duration: speed, easing: 'linear' }
    ).onfinish = () => {
      if (virus.parentElement) {
        endGame();
      }
    };

    function catchVirus() {
      if (!gameActive) return;
      score++;
      scoreboard.textContent = `Score: ${score}`;
      virus.remove();
      viruses = viruses.filter(v => v !== virus);
    }

    virus.addEventListener('click', catchVirus);
    virus.addEventListener('touchstart', (e) => {
      e.preventDefault();
      catchVirus();
    }, { passive: false });

    viruses.push(virus);
  }

  function spawnViruses() {
    spawnInterval = setInterval(() => {
      if (!gameActive) return;
      createVirus();
    }, Math.max(1500 - score * 10, 400));
  }

  function endGame() {
    gameActive = false;
    clearInterval(spawnInterval);
    viruses.forEach(v => v.remove());
    viruses = [];
    scoreboard.textContent = `Game Over! Your score: ${score}`;
    saveScore();
    showLeaderboard();
  }

  function saveScore() {
    const wallet = walletInput.value.trim();
    const timestamp = new Date().toISOString();

    // First, check if wallet already exists
    fetch(`https://sheetdb.io/api/v1/objf6s9bvsqbc/search?wallet=${wallet}`)
      .then(res => res.json())
      .then(data => {
        if (data.length > 0) {
          const existing = data[0];
          const existingScore = parseInt(existing.score);
          if (score > existingScore) {
            // update score
            fetch(`https://sheetdb.io/api/v1/objf6s9bvsqbc/wallet/${wallet}`, {
              method: "PATCH",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                data: { score, timestamp }
              })
            });
          }
        } else {
          // create new entry
          fetch("https://sheetdb.io/api/v1/objf6s9bvsqbc", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              data: [{ wallet, score, timestamp }]
            })
          });
        }
        renderLeaderboard();
      })
      .catch(err => console.error("Error checking wallet:", err));
  }

  function renderLeaderboard() {
    fetch("https://sheetdb.io/api/v1/objf6s9bvsqbc?sort_by=score&sort_order=desc&limit=20")
      .then(res => res.json())
      .then(data => {
        leaderboardList.innerHTML = '';
        data.forEach(entry => {
          const li = document.createElement('li');
          li.textContent = `${entry.wallet}: ${entry.score}`;
          leaderboardList.appendChild(li);
        });
      })
      .catch(err => {
        console.error("Error loading leaderboard:", err);
      });
  }

  function showStartScreen() {
    startScreen.style.display = 'block';
    gameContainer.style.display = 'none';
    scoreboard.style.display = 'none';
    leaderboard.style.display = 'none';
    scoreboard.textContent = 'Score: 0';
    walletInput.value = '';
  }

  function showGame() {
    startScreen.style.display = 'none';
    gameContainer.style.display = 'block';
    scoreboard.style.display = 'block';
    leaderboard.style.display = 'none';
    scoreboard.textContent = `Score: ${score}`;
  }

  function showLeaderboard() {
    startScreen.style.display = 'none';
    gameContainer.style.display = 'none';
    scoreboard.style.display = 'block';
    leaderboard.style.display = 'block';
  }

  startButton.addEventListener('click', () => {
    const wallet = walletInput.value.trim();
    if (wallet === '') {
      alert('Please enter your wallet address!');
      return;
    }
    score = 0;
    gameActive = true;
    showGame();
    spawnViruses();
  });

  showStartScreen();
  renderLeaderboard();
</script>

</body>
</html>
