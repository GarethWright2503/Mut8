<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=yes" />
<title>Catch the MUT8 Virus</title>
<style>
  body {
    margin: 0;
    background: url('Images/mut8-background.jpg') no-repeat center center fixed;
    background-size: contain;
    background-color: black;
    overflow: hidden;
    font-family: 'Arial', sans-serif;
    color: #fff;
    text-align: center;
    user-select: none;
  }

  h1 {
    font-size: 4.4em;
    margin-top: 20px;
  }

  #subtitle {
    font-size: 2.8em;
    margin-bottom: 20px;
    font-style: italic;
  }

  #startScreen {
    margin-top: 20px;
  }

  #gameContainer {
    position: relative;
    width: 100vw;
    height: 80vh;
    overflow: hidden;
    margin: 0 auto;
    touch-action: manipulation;
    display: none; /* hidden initially */
  }

  .virus {
    position: absolute;
    width: 28vw;
    height: 28vw;
    max-width: 180px;
    max-height: 1800px;
    background-image: url('Images/Zombie.png');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
    user-select: none;
  }

  #scoreboard {
    font-size: 2.4em;
    margin: 10px 0 20px 0;
    display: none; /* hidden initially */
  }

  /* Add explicit button styles for consistent color */
  #usernameInput, #startButton, #playAgainButton {
    font-size: 1.3em;
    padding: 10px 15px;
    border-radius: 5px;
    border: none;
    margin: 10px 5px;
    max-width: 320px;
    width: 320px;
    box-sizing: border-box;
    background-color: #28a745;  /* Green background */
    color: white;
    font-weight: bold;
    transition: background-color 0.3s ease;
  }

  #usernameInput {
    background-color: #222;
    color: #eee;
    font-weight: normal;
  }

  #startButton:hover, #playAgainButton:hover {
    background-color: #218838;  /* Darker green on hover */
  }

  #leaderboard {
    max-width: 400px;
    margin: 20px auto 40px auto;
    background: rgba(0,0,0,0.6);
    padding: 15px;
    border-radius: 8px;
    font-size: 1em;
    overflow-y: auto;
    max-height: 250px;
    display: none; /* hidden initially */
  }

  #leaderboard h2 {
    margin-top: 0;
  }

  /* Responsive for mobile */
  @media (max-width: 480px) {
    h1 {
      font-size: 4.8em;
      margin-top: 30px;
    }

    #subtitle {
      font-size: 3.2em;
      margin-bottom: 25px;
    }

    #usernameInput, #startButton, #playAgainButton {
      width: 90%;
      font-size: 1.8em;
      padding: 15px 20px;
      margin: 15px auto;
      display: block;
    }

    #leaderboard {
      width: 90%;
      font-size: 1.1em;
      max-height: 300px;
    }

    #scoreboard {
      font-size: 1.8em;
      margin: 15px 0 30px 0;
    }

    .virus {
      width: 15vw;
      height: 15vw;
      max-width: 120px;
      max-height: 120px;
    }
  }
</style>
</head>
<body>

<h1>Catch the MUT8 Virus</h1>
<div id="subtitle">Play to receive free airdrop of 100 tokens. There is no cure.</div>

<div id="startScreen">
  <input type="text" id="usernameInput" placeholder="Enter your Solana wallet address" maxlength="44" />
  <button id="startButton">Start Game</button>
</div>

<div id="scoreboard">Score: 0</div>
<div id="gameContainer"></div>

<div id="leaderboard">
  <h2>Leaderboard</h2>
  <ol id="leaderboardList"></ol>
</div>

<script>
  const gameContainer = document.getElementById('gameContainer');
  const scoreboard = document.getElementById('scoreboard');
  const startButton = document.getElementById('startButton');
  const usernameInput = document.getElementById('usernameInput');
  const leaderboardList = document.getElementById('leaderboardList');
  const startScreen = document.getElementById('startScreen');
  const leaderboard = document.getElementById('leaderboard');

  let score = 0;
  let viruses = [];
  let spawnInterval;
  let gameActive = false;

  // Solana wallet validator (Base58, length 32-44)
  function isValidWallet(addr) {
    const base58regex = /^[1-9A-HJ-NP-Za-km-z]{32,44}$/;
    return base58regex.test(addr);
  }

  function randomX() {
    return Math.random() * (gameContainer.clientWidth - 90);
  }

  function createVirus() {
    if (!gameActive) return;
    const virus = document.createElement('div');
    virus.classList.add('virus');
    virus.style.left = randomX() + 'px';
    virus.style.bottom = '-90px';
    gameContainer.appendChild(virus);

    // Calculate speed dynamically based on score, minimum 800ms duration
    const speed = Math.max(3000 - score * 40, 800);

    const animation = virus.animate(
      [{ transform: 'translateY(0)' }, { transform: `translateY(-${gameContainer.clientHeight + 100}px)` }],
      { duration: speed, easing: 'linear' }
    );

    animation.onfinish = () => {
      if (virus.parentElement) {
        endGame();
      }
    };

    function catchVirus() {
      if (!gameActive) return;
      score++;
      scoreboard.textContent = `Score: ${score}`;
      animation.cancel();
      virus.remove();
      viruses = viruses.filter(v => v !== virus);
    }

    virus.addEventListener('click', catchVirus);
    virus.addEventListener('touchstart', (e) => {
      e.preventDefault();
      catchVirus();
    }, { passive: false });

    viruses.push(virus);
  }

  function spawnViruses() {
    clearInterval(spawnInterval);
    spawnInterval = setInterval(() => {
      if (!gameActive) return;
      createVirus();
    }, Math.max(1500 - score * 15, 400));
  }

  function endGame() {
    gameActive = false;
    clearInterval(spawnInterval);
    viruses.forEach(v => v.remove());
    viruses = [];
    scoreboard.textContent = `Game Over! Your score: ${score}`;
    saveScore();
    showLeaderboard();
  }

  function saveScore() {
    const wallet = usernameInput.value.trim();
    const timestamp = new Date().toISOString();

    fetch("https://sheetdb.io/api/v1/objf6s9bvsqbc", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        data: [{ wallet, score, timestamp }]
      })
    })
    .then(res => res.json())
    .then(() => console.log("Score saved"))
    .catch(err => console.error("Error saving score:", err));
  }

  function renderLeaderboard() {
    fetch("https://sheetdb.io/api/v1/objf6s9bvsqbc?sort_by=score&sort_order=desc&limit=20")
      .then(res => res.json())
      .then(data => {
        leaderboardList.innerHTML = '';
        if (data.length === 0) {
          leaderboardList.innerHTML = '<li>No scores yet.</li>';
          return;
        }
        data.forEach(entry => {
          const li = document.createElement('li');
          li.textContent = `${entry.wallet}: ${entry.score}`;
          leaderboardList.appendChild(li);
        });
      })
      .catch(err => {
        console.error("Error loading leaderboard:", err);
        leaderboardList.innerHTML = '<li>Error loading leaderboard.</li>';
      });
  }

  function showStartScreen() {
    startScreen.style.display = 'block';
    gameContainer.style.display = 'none';
    scoreboard.style.display = 'none';
    leaderboard.style.display = 'none';
    scoreboard.textContent = 'Score: 0';

    // Remove play again button if exists
    const playAgainBtn = document.getElementById('playAgainButton');
    if(playAgainBtn) playAgainBtn.remove();
  }

  function showGame() {
    startScreen.style.display = 'none';
    gameContainer.style.display = 'block';
    scoreboard.style.display = 'block';
    leaderboard.style.display = 'none';
  }

  function showLeaderboard() {
    startScreen.style.display = 'none';
    gameContainer.style.display = 'none';
    scoreboard.style.display = 'block';
    leaderboard.style.display = 'block';
    renderLeaderboard();

    // Show Play Again button
    if (!document.getElementById('playAgainButton')) {
      const btn = document.createElement('button');
      btn.id = 'playAgainButton';
      btn.textContent = 'Play Again';
      btn.style.display = 'inline-block';
      btn.style.marginTop = '15px';
      btn.style.backgroundColor = '#007bff';
      btn.style.color = '#fff';
      btn.style.border = 'none';
      btn.style.padding = '10px 20px';
      btn.style.borderRadius = '5px';
      btn.style.fontSize = '1.3em';
      btn.style.cursor = 'pointer';
      btn.onmouseenter = () => btn.style.backgroundColor = '#0056b3';
      btn.onmouseleave = () => btn.style.backgroundColor = '#007bff';

      btn.onclick = () => {
        score = 0;
        scoreboard.textContent = `Score: ${score}`;
        showStartScreen();
      };
      scoreboard.parentNode.insertBefore(btn, scoreboard.nextSibling);
    }
  }

  startButton.addEventListener('click', () => {
    const wallet = usernameInput.value.trim();
    if (!isValidWallet(wallet)) {
      alert('Please enter a valid Solana wallet address!');
      return;
    }
    score = 0;
    scoreboard.textContent = `Score: ${score}`;
    gameActive = true;
    showGame();
    spawnViruses();
  });

  // Show start screen initially
  showStartScreen();
  renderLeaderboard();
</script>

</body>
</html>
